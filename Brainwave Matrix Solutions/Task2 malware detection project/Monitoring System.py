import psutil
import time
from datetime import datetime
import json

def monitor_processes():
    processes = []
    for proc in psutil.process_iter(['pid', 'name', 'cmdline']):
        processes.append({
            'pid': proc.info['pid'],
            'name': proc.info['name'],
            'cmdline': proc.info['cmdline']
        })
    return processes

def monitor_network():
    connections = []
    for conn in psutil.net_connections():
        if conn.status == 'ESTABLISHED':
            connections.append({
                'local_addr': f"{conn.laddr.ip}:{conn.laddr.port}",
                'remote_addr': f"{conn.raddr.ip if conn.raddr else 'None'}:{conn.raddr.port if conn.raddr else 'None'}",
                'status': conn.status,
                'pid': conn.pid
            })
    return connections

def log_activity(data_type, data):
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    with open(f"sandbox_log_{data_type}.json", "a") as f:
        f.write(f"{timestamp}: {json.dumps(data)}\n")

# Main monitoring loop
def start_monitoring(duration=300):
    start_time = time.time()
    while time.time() - start_time < duration:
        log_activity("processes", monitor_processes())
        log_activity("network", monitor_network())
        time.sleep(1)

if __name__ == "__main__":
    start_monitoring()
